<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinghao.mapper.UsersMapper">
    <!--代码片段-->
    <sql id="allColumns">
        id,username,birthday,sex,address
    </sql>
    <!--
    //查询全部用户信息
    List<Users> getAll();
    -->
    <select id="getAll" resultType="users">
        select id,username,birthday,sex,address
        from users
    </select>

    <select id="getById" parameterType="int" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where id = #{id}
    </select>

    <update id="update" parameterType="users" >
        update users set username=#{userName},birthday=#{birthday},sex=#{sex},address=#{address}
        where id = #{id}
    </update>
    
    <select id="getByName" parameterType="string" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where username like '%${name}%'
    </select>

    <!--上面用的${}进行拼接，有注入风险，用下面的方式进行拼接！！！（规定）-->
    <select id="getByName2" parameterType="string" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where username like concat('%',#{name},'%')
    </select>

    <insert id="insert" parameterType="users">
        insert into users (username,birthday,sex,address) values (#{userName},#{birthday},#{sex},#{address})
    </insert>

    <delete id="delete" parameterType="int" >
        delete from users where id = #{id}
    </delete>


    <!--如果参数超过一个，parameterType不写-->
    <select id="getByNameOrAddress"  resultType="users">
        select <include refid="allColumns"></include>
        from users
        where ${columnName} like concat('%',#{columnValue},'%')
    </select>

    <insert id="insert2" parameterType="users">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into users (username,birthday,sex,address) values (#{userName},#{birthday},#{sex},#{address})
    </insert>

    <select id="getByCondition" parameterType="users" resultType="users">
        select <include refid="allColumns"></include>
        from users
        <where>
            <if test="userName !=null and userName !=''">
                and username like concat('%',#{userName},'%')
            </if>
            <if test="birthday != null ">
                and birthday like concat('%',#{birthday},'%')
            </if>
            <if test="sex !=null and sex !=''">
                and sex = #{sex}
            </if>
            <if test="address != null and address !=''">
                and address like concat('%',#{address},'%')
            </if>
        </where>
    </select>

    <update id="updateBySet" parameterType="users">
        update users
        <set>
            <if test="userName != null and userName != ''">
                username = #{userName},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address =#{address} ,
            </if>
        </set>
        where id = #{id}
    </update>

    
    <select id="getByIds" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where id in
            <foreach collection="array" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
    </select>


    <delete id="deleteBatch" >
        delete from users
        where id in <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id}
    </foreach>
    </delete>

    <insert id="insertBatch" >
        insert into users(username,birthday,sex,address)
        values <foreach collection="list" item="u" separator="," >
                (#{u.userName},#{u.birthday},#{u.sex},#{u.address})
                </foreach>
    </insert>

    <select id="getByBirthday" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where birthday between #{arg0} and #{arg1}
    </select>


    <!--入参是map-->
    <select id="getByMap" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where birthday between #{birthdayBegin} and #{birthdayEnd}
    </select>

    <!--返回值是map，一行的情况-->
    <select id="getReturnMap" parameterType="int" resultType="map">
        select username,address
        from users
        where id = #{id}
    </select>

    <!--返回值是map，多行的情况-->
    <select id="getMulMap" resultType="map">
        select username,address
        from users
    </select>
</mapper>